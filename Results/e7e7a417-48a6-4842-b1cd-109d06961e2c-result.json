{"name": "test_cancelDuplicateMeasureDetail", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <SearchMeasureOperations_test.SMCTests testMethod=test_cancelDuplicateMeasureDetail>\n\n    @allure.testcase(\"Click on cancel duplicate measure detail as per the search criteria\")\n    @allure.description(\"\")\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_cancelDuplicateMeasureDetail(self):\n        self.lp.login(user_data['username'], user_data['password'])\n        result = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result, \"Login was successful\")\n\nSearchMeasureOperations_test.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x109e16128>\ntestName = 'test_validLogin', result = False\nresultMessage = 'Login was successful'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n../../utilities/teststatus.py:63: AssertionError"}, "attachments": [{"name": "log", "source": "87459e32-586c-4fc6-b5ff-188afc32c17e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a0cf57f2-7cc7-4dff-8be1-9157af8112c4-attachment.txt", "type": "text/plain"}], "start": 1595600436841, "stop": 1595600453389, "uuid": "211caff4-b9b8-402a-ad8f-29a6ceed6750", "historyId": "6776e613528fcfed47a16af42f67a556", "testCaseId": "a1c3a213f7a10ed208032168f54064eb", "fullName": "SearchMeasureOperations_test.SMCTests#test_cancelDuplicateMeasureDetail", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"}, {"name": "suite", "value": "SearchMeasureOperations_test"}, {"name": "subSuite", "value": "SMCTests"}, {"name": "host", "value": "TGB4012RMDRZ2.tenethealth.net"}, {"name": "thread", "value": "8138-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "SearchMeasureOperations_test"}], "links": [{"type": "test_case", "url": "Click on cancel duplicate measure detail as per the search criteria", "name": "Click on cancel duplicate measure detail as per the search criteria"}]}