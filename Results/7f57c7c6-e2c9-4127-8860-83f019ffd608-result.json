{"name": "test_clickSearchedMessage", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <SearchMeasureOperations_test.SMCTests testMethod=test_clickSearchedMessage>\n\n    @allure.testcase(\"Click on searched measure detail as per the search criteria\")\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_clickSearchedMessage(self):\n        self.lp.login(user_data['username'], user_data['password'])\n        result1 = self.lp.verifyLoginTitle()\n        self.ts.mark(result1, \"Title Verified\")\n        result = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result, \"Login was successful\")\n\nSearchMeasureOperations_test.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x101deae10>\ntestName = 'test_validLogin', result = False\nresultMessage = 'Login was successful'\n\n    def markFinal(self, testName, result, resultMessage):\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \"TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n../../utilities/teststatus.py:45: AssertionError"}, "attachments": [{"name": "loginscreen", "source": "24048d8a-2dff-45dd-ad12-dfd431d4eadf-attachment.png", "type": "image/png"}, {"name": "loginscreen", "source": "bed2424d-36bb-4775-bb5e-b3153f0810b4-attachment.png", "type": "image/png"}, {"name": "log", "source": "c52276c0-bb66-4b70-a9d2-03388194e07f-attachment.txt", "type": "text/plain"}], "start": 1595236785703, "stop": 1595236812684, "uuid": "541eb86c-51a1-49c0-9f85-118fbb5e937e", "historyId": "bf2173688761f4ab47d2e09203ea3301", "testCaseId": "b1631f6e5a331353f67ebe861df07389", "fullName": "SearchMeasureOperations_test.SMCTests#test_clickSearchedMessage", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=5)"}, {"name": "suite", "value": "SearchMeasureOperations_test"}, {"name": "subSuite", "value": "SMCTests"}, {"name": "host", "value": "SMH94758003D.tenethealth.net"}, {"name": "thread", "value": "46245-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "SearchMeasureOperations_test"}], "links": [{"type": "test_case", "url": "Click on searched measure detail as per the search criteria", "name": "Click on searched measure detail as per the search criteria"}]}