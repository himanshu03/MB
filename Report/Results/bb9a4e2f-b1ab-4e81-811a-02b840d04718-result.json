{"name": "test_selectDeselectPoorMeasure", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <NewMeasure_test.NewTest testMethod=test_selectDeselectPoorMeasure>\n\n    @allure.testcase(\"Click on cancel new measure modal\")\n    @allure.description(\"PTCS-T20193 (1.0)\")\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    @allure.severity(allure.severity_level.CRITICAL)\n    #@pytest.mark.skip\n    def test_selectDeselectPoorMeasure(self):\n        self.lp.login(user_data['username'], user_data['password'])\n        result = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result, \"Login was successful\")\n\nNewMeasure_test.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x10dd24dd8>\ntestName = 'test_validLogin', result = False\nresultMessage = 'Login was successful'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n../../utilities/teststatus.py:63: AssertionError"}, "description": "PTCS-T20193 (1.0)", "attachments": [{"name": "log", "source": "be9c75f0-af22-4f88-97bf-cf9943fedfab-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e3ac5fc9-a60f-49bb-a35f-5dc8bb61bdeb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d05f0037-0346-456f-a8b4-788107581b85-attachment.txt", "type": "text/plain"}], "start": 1596557187717, "stop": 1596557204134, "uuid": "625c4d73-69e3-4218-983f-fa5cce53ac3a", "historyId": "96c83326dc82e83a60a3caa4db280015", "testCaseId": "2f66df54a2c7a4637ce6be1fc9573088", "fullName": "NewMeasure_test.NewTest#test_selectDeselectPoorMeasure", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"}, {"name": "suite", "value": "NewMeasure_test"}, {"name": "subSuite", "value": "NewTest"}, {"name": "host", "value": "RRD023829463.tenethealth.net"}, {"name": "thread", "value": "5762-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "NewMeasure_test"}], "links": [{"type": "test_case", "url": "Click on cancel new measure modal", "name": "Click on cancel new measure modal"}]}