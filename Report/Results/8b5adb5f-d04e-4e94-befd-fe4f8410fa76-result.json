{"name": "test_cancelNewMeasure", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Tests.MeasureTest.MeasureCount_test.NewTest testMethod=test_cancelNewMeasure>\n\n    @allure.testcase(\"Click on cancel new measure modal\")\n    @allure.description(\"PTCS-T20193 (1.0)\")\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    @allure.severity(allure.severity_level.CRITICAL)\n    # @pytest.mark.skip\n    def test_cancelNewMeasure(self):\n        self.lp.login(user_data['username'], user_data['password'])\n        result = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result, \"Login was successful\")\n\nMeasureTest/MeasureCount_test.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Utils.teststatus.TestStatus object at 0x116380320>\ntestName = 'test_validLogin', result = False\nresultMessage = 'Login was successful'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n../Utils/teststatus.py:63: AssertionError"}, "description": "PTCS-T20193 (1.0)", "attachments": [{"name": "log", "source": "c121234b-c9c0-4675-b73b-9e1c205c980e-attachment.txt", "type": "text/plain"}], "start": 1597147294680, "stop": 1597147344773, "uuid": "04d3df14-d344-4c66-8c03-8d35d6748200", "historyId": "e76e85b7c1f368b964ddbfa99f5423a9", "testCaseId": "4e788543c3843abfe617c689cff6a5bc", "fullName": "MeasureTest.MeasureCount_test.NewTest#test_cancelNewMeasure", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"}, {"name": "parentSuite", "value": "MeasureTest"}, {"name": "suite", "value": "MeasureCount_test"}, {"name": "subSuite", "value": "NewTest"}, {"name": "host", "value": "THO40157601L.tenethealth.net"}, {"name": "thread", "value": "23159-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "MeasureTest.MeasureCount_test"}], "links": [{"type": "test_case", "url": "Click on cancel new measure modal", "name": "Click on cancel new measure modal"}]}